/******************************************************************************/
/* Search bar *****************************************************************/
/******************************************************************************/

.search-container {
    background-color: var(--medium-background);
    /*
     * Allow scrolling when the screen is too small.
     * Letting the search boxes wrap around to multiple lines would look ugly.
     */
    overflow: auto;
}

.search {
    display: flex;
    justify-content: space-between;
    column-gap: 0.50rem;
}

/* Let the flex items grow in size when there's free space. */
.search > form {
    flex: 1 0;
}

/*
 * Overide the minimum width for input boxes that we defined elsewhere,
 * so that they can shrink to be as small as we need them to be in the
 * confined space of the search bar.
 */
.search > form > input {
    min-width: 5rem;
}

/* Make them grow when focused, so that the user has enough space to work with. */
.search > form > input:focus {
    min-width: 18rem;
}

/******************************************************************************/
/* Message boxes **************************************************************/
/******************************************************************************/

.message {
    margin: 1rem 0rem;
    padding: 0rem 1rem;

    border: 3px dashed var(--dark-background);
    font-weight: bold;
}

.message > p {
    color: var(--font-color);
    margin: 0.5rem 0rem;
}

/*----------------------------------------------------------------------------*/
/* Specific message boxes */
/*----------------------------------------------------------------------------*/

.message.success      { background-color: var(--green);  }
.message.failure      { background-color: var(--red);    }
.message.creation     { background-color: var(--green);  }
.message.deletion     { background-color: var(--red);    }
.message.error        { background-color: var(--red);    }
.message.warning      { background-color: var(--orange); }
.message.modification { background-color: var(--yellow); }
.message.information  { background-color: var(--blue);   }

.message.success      > p::before { content: '✔️ '; }
.message.failure      > p::before { content: '❌ '; }
.message.creation     > p::before { content: '📄 '; }
.message.deletion     > p::before { content: '🗑️ '; }
.message.error        > p::before { content: '🛑 '; }
.message.warning      > p::before { content: '⚠️ '; }
.message.modification > p::before { content: '✏️ '; }
.message.information  > p::before { content: 'ℹ️ '; }

/******************************************************************************/
/* Autocomplete ***************************************************************/
/******************************************************************************/

.autocomplete {
    cursor: pointer;

    border: 1px solid var(--active);
    border-top: 0px;
    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);

    background: #FFF;

    position: absolute;
    display: none;
    z-index: 9999;
}

.autocomplete > .item {
    padding: 0.5em;
    line-height: 0.5rem;
    font-size: 1rem;

    position: relative;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.autocomplete > .item b {
    font-weight: normal;
    color: #1F8DD6;
}

.autocomplete > .item:hover {
    background-color: #DDD;
}

.autocomplete > .item.highlighted {
    background-color: var(--light-background);
}

/******************************************************************************/
/* Pagination *****************************************************************/
/******************************************************************************/

.pagination {
    display: flex;
    justify-content: center;
    align-items: center;

    width: 100%;
    column-gap: 0.75rem;

    margin-bottom: 1rem;
}

.pagination > .line {
    background-color: var(--dark-background);
    width: 1px;
    height: 1.5rem;
    opacity: 0.5;
}

.pagination a.arrow {
    font-size: 1.5rem;
    line-height: 1.5rem;
}

/******************************************************************************/
/* File listing ***************************************************************/
/******************************************************************************/
/* Used on `torrent/music/torrent/view` */

ul.file-list {
    list-style: none;
    padding-left: 0rem;
}

/* Start adding left-padding only when we're recursing. */
ul.file-list > ul.file-list {
    padding-left: 2rem;
}

ul.file-list .name {
    background-color: var(--element-background);
    display: inline;
}

ul.file-list .size {
    display: inline;
    font-size: 0.8rem;
    opacity: 75%;
}

/******************************************************************************/
/* Markdown boxes *************************************************************/
/******************************************************************************/
/*
 * Used anywhere there is user-enterable text,
 * like in the forum or in user biographies
 */

.markdown h1, .markdown h2, .markdown h3, .markdown h4, .markdown h5 {
    font-size: 1rem;
    font-weight: normal;
    margin: 1rem 0rem;

    /*
     * Make it so that the width of the element is only as big as the text
     * contained within. We could use `display: inline-block` instead,
     * but that breaks margin collapsing.
     *
     * We don't want the user-generated markdown headers to have a
     * big horizontal bar like our (real) site headers.
     */
    display: table;
}

.markdown h1::before { content: '# '; }
.markdown h2::before { content: '## '; }
.markdown h3::before { content: '### '; }
.markdown h4::before { content: '#### '; }
.markdown h5::before { content: '##### '; }

.markdown li {
    list-style: none;
    margin-bottom: 0.25rem;
}

.markdown li::before {
    margin-right: 0.50rem;
    color: var(--font-color-inverted);
    background-color: var(--font-color-inverted-background);
}

.markdown li:first-child {
    counter-reset: index;
}

.markdown ul > li::before {
    content: '*';
    counter-increment: index;
}

.markdown ol > li::before {
    content: counter(index, decimal) '.';
    counter-increment: index;
}

/******************************************************************************/
/* Tooltips *******************************************************************/
/******************************************************************************/

.tooltip {
    position: relative; /* making the .tooltip span a container for the tooltip text */
    border-bottom: 1px dashed #000; /* little indicater to indicate it's hoverable */
}

.tooltip:before {
    content: attr(data-text); /* here's the magic */
    position: absolute;

    /* vertically center */
    bottom: 50%;
    left: 50%;
    transform: translateY(-50%);
    transform: translateX(-50%);

    /* basic styles */
    padding: 10px;
    border-radius: 10px;
    background: #000;
    color: #fff;
    text-align: center;

    display: none; /* hide by default */
}

.tooltip:hover:before {
    display: block;
}

/******************************************************************************/
/* Spoilers *******************************************************************/
/******************************************************************************/

.spoiler {
    background: #000;
    border-radius: 0.2em;
    color: transparent;
}

.spoiler:hover,
.spoiler:focus {
    background: transparent;
    color: inherit;
}
