name: Django CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11.0-rc.1]

    # -------------------------------------------
    # Check-out repository
    # -------------------------------------------
    steps:
    - uses: actions/checkout@v3

    # -------------------------------------------
    # Set-up Python
    # -------------------------------------------
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # -------------------------------------------
    # Set-up Poetry
    # -------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    # -------------------------------------------
    # Load cached venv, if cache exists
    # -------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    # -------------------------------------------
    # Install dependencies, if cache does not exist
    # -------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    #----------------------------------------------
    # Run Django tests
    #----------------------------------------------
    - name: Run Tests
      run: |
        poetry run python manage.py makemigrations
        poetry run python manage.py migrate
        poetry run python manage.py test --parallel
